{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 214,
  "lineage": "a2b9b2c4-2bb4-b30c-f180-1f7a4bcc8337",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "docker_container",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "attach": false,
            "bridge": "",
            "capabilities": [],
            "cgroupns_mode": null,
            "command": [
              "agent",
              "-dev",
              "-client=0.0.0.0"
            ],
            "container_logs": null,
            "container_read_refresh_timeout_milliseconds": 15000,
            "cpu_set": "",
            "cpu_shares": 0,
            "destroy_grace_seconds": null,
            "devices": [],
            "dns": null,
            "dns_opts": null,
            "dns_search": null,
            "domainname": "",
            "entrypoint": [
              "docker-entrypoint.sh"
            ],
            "env": [],
            "exit_code": null,
            "gateway": "",
            "gpus": null,
            "group_add": null,
            "healthcheck": null,
            "host": [],
            "hostname": "DESKTOP-ET8QFN2",
            "id": "c8c7d003e8cc1434735e6cd4a5d1df467b9b3b6305ae46019ea48a98a4357ac4",
            "image": "sha256:ee6d75ac9539a63a4ec35f9cef3fa327b6e66dedc80c837b7e1f8b10a6a1f973",
            "init": false,
            "ip_address": "",
            "ip_prefix_length": 0,
            "ipc_mode": "private",
            "labels": [],
            "links": null,
            "log_driver": "json-file",
            "log_opts": null,
            "logs": false,
            "max_retry_count": 0,
            "memory": 0,
            "memory_swap": 0,
            "mounts": [],
            "must_run": true,
            "name": "consul",
            "network_alias": null,
            "network_data": [
              {
                "gateway": "",
                "global_ipv6_address": "",
                "global_ipv6_prefix_length": 0,
                "ip_address": "",
                "ip_prefix_length": 0,
                "ipv6_gateway": "",
                "network_name": "host"
              }
            ],
            "network_mode": "host",
            "networks": null,
            "networks_advanced": [],
            "pid_mode": "",
            "ports": [],
            "privileged": false,
            "publish_all_ports": false,
            "read_only": false,
            "remove_volumes": true,
            "restart": "unless-stopped",
            "rm": false,
            "runtime": "runc",
            "security_opts": [],
            "shm_size": 64,
            "start": true,
            "stdin_open": false,
            "stop_signal": "",
            "stop_timeout": 0,
            "storage_opts": null,
            "sysctls": null,
            "tmpfs": null,
            "tty": false,
            "ulimit": [],
            "upload": [],
            "user": "",
            "userns_mode": "",
            "volumes": [],
            "wait": false,
            "wait_timeout": 60,
            "working_dir": "/"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "docker_image.consul"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "docker_image",
      "name": "consul",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "build": [],
            "force_remove": null,
            "id": "sha256:ee6d75ac9539a63a4ec35f9cef3fa327b6e66dedc80c837b7e1f8b10a6a1f973hashicorp/consul:1.21",
            "image_id": "sha256:ee6d75ac9539a63a4ec35f9cef3fa327b6e66dedc80c837b7e1f8b10a6a1f973",
            "keep_locally": null,
            "latest": "sha256:ee6d75ac9539a63a4ec35f9cef3fa327b6e66dedc80c837b7e1f8b10a6a1f973",
            "name": "hashicorp/consul:1.21",
            "output": null,
            "platform": null,
            "pull_trigger": null,
            "pull_triggers": null,
            "repo_digest": "hashicorp/consul@sha256:842ee8b5d0ea228b6c36230a442bcf13b7f92bbe35091676f4482eaa933a6ad7",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "angular_ecommerce",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "angular-ecommerce",
            "jobspec": "job \"angular-ecommerce\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"frontend\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n\r\n      port \"http\" {\r\n        static = 4200\r\n      }\r\n    }\r\n\r\n    task \"angular\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/angular-ecommerce:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      service {\r\n        name     = \"angular-ecommerce\"\r\n        port     = \"http\"\r\n        tags     = [\"frontend\", \"angular\", \"nginx\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name          = \"angular-health\"\r\n          type          = \"http\"\r\n          path          = \"/\"\r\n          interval      = \"10s\"\r\n          timeout       = \"2s\"\r\n          address_mode  = \"host\"\r\n        }\r\n      }\r\n\r\n      \r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1390",
            "name": "angular-ecommerce",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "frontend",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "angular",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.api_gateway",
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.api_gateway_ready",
            "null_resource.auth_service_ready",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "api-gateway",
            "jobspec": "job \"api-gateway\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"gateway\" {\r\n    count = 1\r\n\r\n    # Koristimo host mre≈æu da izbegnemo CNI/iptables komplikacije u WSL-u\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 8080\r\n      }\r\n    }\r\n\r\n    task \"gateway\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/api-gateway:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"  # Mora da se poklapa sa group.network.mode\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n\r\n      service {\r\n        name     = \"api-gateway\"\r\n        port     = \"http\"\r\n        tags     = [\"gateway\", \"edge\", \"routing\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"gateway-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n          method   = \"GET\"\r\n        }\r\n      }\r\n\r\n      env {\r\n        JAVA_OPTS         = \"-Xms128m -Xmx256m\"\r\n        GATEWAY_HOSTNAME  = \"localhost\"  # Po≈°to koristi host mre≈æu\r\n        EUREKA_SERVER_URL = \"http://localhost:8761/eureka\"  # Direktan pristup Eureki\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1311",
            "name": "api-gateway",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "gateway",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "gateway",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.eureka_server",
            "null_resource.eureka_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "auth_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "auth-service",
            "jobspec": "job \"auth-service\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"auth\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n\r\n      port \"http\" {\r\n        static = 8081\r\n      }\r\n    }\r\n\r\n    task \"auth\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/auth-service:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        DB_URL      = \"jdbc:postgresql://localhost:5432/ecommerce-db\"\r\n        DB_USERNAME = \"postgres\"\r\n        DB_PASSWORD = \"1111\"\r\n\r\n        # JWT Configuration\r\n        JWT_EXPIRATION = \"7200\"\r\n        JWT_PRIVATE_KEY = \u003c\u003cEOF\r\n-----BEGIN PRIVATE KEY-----\r\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCugC5RPMTMFM+S92/rDjF+xR8JM3KNvLcVEOx1/ofdHZyHaKalw6Gi1dXk5ldr0q/FwYCJZ40m0Pwc6k1lWx4awEqNgS7mok2XFXLvOKRX6cFyr3/VSp5YbZ739KCzUanlw9uAR4uRu1BeRewA811gjEZpPV+RNlmsZTxXIM64nUpjmtahhzcnskuecele0CCzbNdXULwOdPhrua5fMTQZXGVic0lpHzqTvnlHtgEDvEt4k/WghZfMphcGJWb22KUm8V6q7xtyUjAZxSthG8C0urQPbbIftnPbhRIHnrVTQZOkmYfWLWEBm83M064nc8S7vVmaFD5S4r5qIp5MPW/vAgMBAAECggEAMMXP7FHVWYs5h0TUibjSWbHj3lD8ZCRKcb9ksAgf1kwX+3rjFTLMQzSMT6mX5qGhEl9mu0DvoVlJFhXg4wLoM6bqT4m7X6gekqtij/1fZdkGgjUOQEHWZzXgeEJuBiC9oWQwPjcBCg72RBs7/voGb91VMsX+J5quzrIO/vVDAjMxqZTP3SmhK6ldpI+JGA/X/33i1N/Wpi7vPv23t5nBFTGqYuijnj8zRl9qoYPnkCouLCPtMPbVOeVbO2CTaNBuaeAzOrvrWKIolGfBHxVfNWyUD+OuR/Ei30Dlivp0QMOcoipYJcFMkxTNNuiEWau6ySXEhifrQK2T3UBy6p1tlQKBgQC/x/pG7TJFlJEj89h0E4I//o9FTcJesMgkODTV/vDA7UvAc7kJ5UKX2BnUmkpv0bZHmEcqBdGxvu/YO0oBrMzNB1gIqAj5oSAVp0gIy5zyIToXQGbPtaSPQvo5NWePyDzVJcPDNw3kfYpv2gEX6LKArDe4Xvb44XgW2bg1fKXSawKBgQDo7t+0UGtpdEqmzCVIcBFz9PPmLKdaWpXXASFJTyjtHGNGRib2+cxjfCKFvHUh5+gsG5VjM0g78CUnmnuYXXCVvdSQRR0gGPCfyBQO8YEmmRh8miV7WxM68Hd+Ur4394qyGiPv0bAWonlFsNVEQQgogl3aQLu+OgpOMR4wyAphjQKBgB3YajuVeEhZyYiVzy6pRpDc9cDsS/5edpckZByVczQi+bH2kGpY0lc9Gy/53vGt6jcUHKcOhsaplzvIZkkCclDJ/spCFDt89rhH8y7jOQZ5Y0fxDs7uTrC41KYIiJhYqhblrKR5seDIJL4paBgnb3gU1QsNRFQRCpZLxZ4VSt0HAoGAbA40FG+iBF+AKfRV706dqg8d/c8FK3MOQ5kwmdNxBt2+Z+EvPi8PU69ITIXqSHpOR/fbyxMFFVkHw2F0qG/gRHa1Xt/Q7QzkwxqLw4rhAMjQhSz06k6LkzHuHNnBiDD7VDewKBY7+6QPYfbwWCNa53/ijdatwUcndLJwcOy7dBkCgYEAnkCTKO3IvEbMI2QEAw57fv6xonsvxv8xDe1QEoayTHs6SHo/cbaNvLOhfDS3pK4krgPcO4rE2R9jaXYliS84cTOyvaHJfTy1NvA9KxjNrvOI1/6Rz8Nih4bADDPBenwjuFSkmBgd/CqZCSkHK4EpD7sO8DOZbhB+LQHl2hERI2U=\r\n-----END PRIVATE KEY-----\r\nEOF\r\n\r\n        JWT_PUBLIC_KEY = \u003c\u003cEOF\r\n-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAroAuUTzEzBTPkvdv6w4xfsUfCTNyjby3FRDsdf6H3R2ch2impcOhotXV5OZXa9KvxcGAiWeNJtD8HOpNZVseGsBKjYEu5qJNlxVy7zikV+nBcq9/1UqeWG2e9/Sgs1Gp5cPbgEeLkbtQXkXsAPNdYIxGaT1fkTZZrGU8VyDOuJ1KY5rWoYc3J7JLnnHpXtAgs2zXV1C8DnT4a7muXzE0GVxlYnNJaR86k755R7YBA7xLeJP1oIWXzKYXBiVm9tilJvFequ8bclIwGcUrYRvAtLq0D22yH7Zz24USB561U0GTpJmH1i1hAZvNzNOuJ3PEu71ZmhQ+UuK+aiKeTD1v7wIDAQAB\r\n-----END PUBLIC KEY-----\r\nEOF\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      service {\r\n        name     = \"auth-service\"\r\n        port     = \"http\"\r\n        tags     = [\"auth\", \"security\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"auth-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1312",
            "name": "auth-service",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "auth",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "auth",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "cart_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "cart-service",
            "jobspec": "job \"cart-service\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"cart\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 9001\r\n      }\r\n    }\r\n\r\n    task \"cart\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/cart-service:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        DB_URL      = \"jdbc:postgresql://localhost:5432/ecommerce-db\"\r\n        DB_USERNAME = \"postgres\"\r\n        DB_PASSWORD = \"1111\"\r\n        PLAY_PORT = \"9001\"\r\n        PLAY_SECRET = \"4Z2PJ;WnJ:Qo`\u003eJTW4[7dSIIX5\u003cw9/1rhl;yw_Q/qZxJ?HbLOhoZX0iAboYKT`65\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n\r\n      service {\r\n        name     = \"cart-service\"\r\n        port     = \"http\"\r\n        tags     = [\"cart\", \"play\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"cart-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1388",
            "name": "cart-service",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "cart",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "cart",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.auth_service_ready",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "customer_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "customer-service",
            "jobspec": "job \"customer-service\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"customer\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 8083\r\n      }\r\n    }\r\n\r\n    task \"customer\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/customer-service:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        DB_URL      = \"jdbc:postgresql://localhost:5432/ecommerce-db\"\r\n        DB_USERNAME = \"postgres\"\r\n        DB_PASSWORD = \"1111\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n\r\n      service {\r\n        name     = \"customer-service\"\r\n        port     = \"http\"\r\n        tags     = [\"customer\", \"scalatra\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"customer-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1391",
            "name": "customer-service",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "customer",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "customer",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.auth_service_ready",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "eureka_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "eureka-server",
            "jobspec": "job \"eureka-server\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"eureka\" {\r\n    count = 1\r\n\r\n    # Koristimo host mre≈æu da izbegnemo CNI/iptables komplikacije u WSL-u\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 8761\r\n      }\r\n    }\r\n\r\n    update {\r\n      stagger      = \"30s\"\r\n      max_parallel = 1\r\n    }\r\n\r\n    task \"eureka\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/eureka-server:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"  # Mora da se poklapa sa group.network.mode\r\n      }\r\n\r\n      env {\r\n        JAVA_OPTS                             = \"-Xms128m -Xmx256m\"\r\n        SERVER_PORT                           = \"8761\"\r\n        EUREKA_CLIENT_REGISTER_WITH_EUREKA    = \"false\"  # Standalone re≈æim\r\n        EUREKA_CLIENT_FETCH_REGISTRY          = \"false\"\r\n        EUREKA_INSTANCE_HOSTNAME              = \"eureka-server\"\r\n        EUREKA_INSTANCE_PREFER_IP_ADDRESS     = \"false\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n\r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      service {\r\n        name     = \"eureka-server\"\r\n        port     = \"http\"\r\n        tags     = [\"eureka\", \"discovery\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"eureka-health\"\r\n          type     = \"http\"\r\n          path     = \"/actuator/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n          method   = \"GET\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1278",
            "name": "eureka-server",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "eureka",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "eureka",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "grafana",
            "jobspec": "job \"grafana\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"grafana\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"ui\" {\r\n        static = 3000\r\n      }\r\n    }\r\n\r\n    volume \"grafana-data\" {\r\n      type      = \"host\"\r\n      source    = \"grafana-data\"\r\n      read_only = false\r\n    }\r\n\r\n    task \"grafana\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"grafana/grafana:10.2.3\"\r\n        ports        = [\"ui\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        GF_SECURITY_ADMIN_USER     = \"admin\"\r\n        GF_SECURITY_ADMIN_PASSWORD = \"grafana123\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      volume_mount {\r\n        volume      = \"grafana-data\"\r\n        destination = \"/var/lib/grafana\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 700\r\n        memory = 768\r\n      }\r\n\r\n      service {\r\n        name     = \"grafana\"\r\n        port     = \"ui\"\r\n        tags     = [\"dashboard\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"grafana-health\"\r\n          type     = \"http\"\r\n          path     = \"/\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1333",
            "name": "grafana",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "grafana",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "grafana",
                    "volume_mounts": [
                      {
                        "destination": "/var/lib/grafana",
                        "read_only": false,
                        "volume": "grafana-data"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "grafana-data",
                    "read_only": false,
                    "source": "grafana-data",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.api_gateway",
            "nomad_job.eureka_server",
            "null_resource.api_gateway_ready",
            "null_resource.eureka_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "nats_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "nats-server",
            "jobspec": "job \"nats-server\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"nats\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"client\" {\r\n        static = 4222\r\n      }\r\n      port \"monitor\" {\r\n        static = 8222\r\n      }\r\n    }\r\n\r\n    task \"nats\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"nats:2.10.11\"\r\n        ports        = [\"client\", \"monitor\"]\r\n        network_mode = \"host\"\r\n        args         = [\r\n          \"--name\", \"nats-server\",\r\n          \"--http_port\", \"8222\",\r\n          \"--log\", \"debug\"\r\n        ]\r\n      }\r\n\r\n      resources {\r\n        cpu    = 500\r\n        memory = 512\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      service {\r\n        name     = \"nats-server\"\r\n        port     = \"client\"\r\n        tags     = [\"messaging\", \"pubsub\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"nats-client-port\"\r\n          type     = \"tcp\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n\r\n      service {\r\n        name     = \"nats-monitor\"\r\n        port     = \"monitor\"\r\n        tags     = [\"monitoring\", \"nats\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"nats-monitor-http\"\r\n          type     = \"http\"\r\n          path     = \"/\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1279",
            "name": "nats-server",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "nats",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "nats",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "order_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "order-service",
            "jobspec": "job \"order-service\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"order\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 9003\r\n      }\r\n    }\r\n\r\n    task \"order\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/order-service:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        DB_URL      = \"jdbc:postgresql://localhost:5432/ecommerce-db\"\r\n        DB_USERNAME = \"postgres\"\r\n        DB_PASSWORD = \"1111\"\r\n        PLAY_PORT = \"9003\"\r\n        PLAY_SECRET = \"Wm3xGzcK4yZ5eanK41YAT[=\u003cqyz6=/fJfyanYtEXyl/r/JNI28X;\u003e0[q3epxiGnb\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 700\r\n        memory = 768\r\n      }\r\n\r\n      service {\r\n        name     = \"order-service\"\r\n        port     = \"http\"\r\n        tags     = [\"order\", \"play\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"order-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1389",
            "name": "order-service",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "order",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "order",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.auth_service_ready",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "postgres",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "postgres",
            "jobspec": "job \"postgres\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"db\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"db\" {\r\n        static = 5432\r\n      }\r\n    }\r\n\r\n    volume \"pgdata\" {\r\n      type      = \"host\"\r\n      source    = \"pgdata\"\r\n      read_only = false\r\n    }\r\n\r\n    task \"postgres\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"postgres:15\"\r\n        ports        = [\"db\"]\r\n        network_mode = \"host\"\r\n        args = [\"-c\", \"listen_addresses=*\"]\r\n      }\r\n\r\n      env {\r\n        POSTGRES_DB       = \"ecommerce-db\"\r\n        POSTGRES_USER     = \"postgres\"\r\n        POSTGRES_PASSWORD = \"1111\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      volume_mount {\r\n        volume      = \"pgdata\"\r\n        destination = \"/var/lib/postgresql/data\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 700\r\n        memory = 768\r\n      }\r\n\r\n      service {\r\n        name     = \"postgres\"\r\n        port     = \"db\"\r\n        tags     = [\"sql\", \"database\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"postgres-tcp\"\r\n          type     = \"tcp\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1280",
            "name": "postgres",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "db",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "postgres",
                    "volume_mounts": [
                      {
                        "destination": "/var/lib/postgresql/data",
                        "read_only": false,
                        "volume": "pgdata"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "pgdata",
                    "read_only": false,
                    "source": "pgdata",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "product_service",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "product-service",
            "jobspec": "job \"product-service\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"product\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"http\" {\r\n        static = 9002\r\n      }\r\n    }\r\n\r\n    task \"product\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"ghcr.io/radovan85/ecommerce-scl/product-service:main\"\r\n        ports        = [\"http\"]\r\n        network_mode = \"host\"\r\n      }\r\n\r\n      env {\r\n        DB_URL      = \"jdbc:postgresql://localhost:5432/ecommerce-db\"\r\n        DB_USERNAME = \"postgres\"\r\n        DB_PASSWORD = \"1111\"\r\n        PLAY_PORT = \"9002\"\r\n        PLAY_SECRET = \"4eNPew?:b\u003c22r?9;HEN\u003eFveN\u003cQ83@s=oQ1v3ILZ0V^03XVSKVOIj^lm8/xnf/Zwo\"\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 700\r\n        memory = 768\r\n      }\r\n\r\n      service {\r\n        name     = \"product-service\"\r\n        port     = \"http\"\r\n        tags     = [\"product\", \"play\", \"metrics\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"product-health\"\r\n          type     = \"http\"\r\n          path     = \"/api/health\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1387",
            "name": "product-service",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "product",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "product",
                    "volume_mounts": null
                  }
                ],
                "volumes": null
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.auth_service_ready",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "nomad_job",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/nomad\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allocation_ids": [],
            "consul_token": null,
            "datacenters": [
              "dc1"
            ],
            "deployment_id": null,
            "deployment_status": null,
            "deregister_on_destroy": true,
            "deregister_on_id_change": true,
            "detach": true,
            "hcl2": [],
            "id": "prometheus",
            "jobspec": "job \"prometheus\" {\r\n  datacenters = [\"dc1\"]\r\n  type        = \"service\"\r\n\r\n  group \"prometheus\" {\r\n    count = 1\r\n\r\n    network {\r\n      mode = \"host\"\r\n      port \"web\" {\r\n        static = 9090\r\n      }\r\n    }\r\n\r\n    volume \"prometheus-config\" {\r\n      type      = \"host\"\r\n      source    = \"prometheus-config\"\r\n      read_only = true\r\n    }\r\n\r\n    task \"prometheus\" {\r\n      driver = \"docker\"\r\n\r\n      config {\r\n        image        = \"prom/prometheus:latest\"\r\n        ports        = [\"web\"]\r\n        network_mode = \"host\"\r\n        args = [\r\n          \"--config.file=/etc/prometheus/prometheus.yml\",\r\n          \"--web.listen-address=0.0.0.0:9090\"\r\n        ]\r\n      }\r\n\r\n      volume_mount {\r\n        volume      = \"prometheus-config\"\r\n        destination = \"/etc/prometheus\"\r\n      }\r\n\r\n      resources {\r\n        cpu    = 700\r\n        memory = 768\r\n      }\r\n      \r\n      lifecycle {\r\n        hook    = \"prestart\"\r\n        sidecar = false\r\n      }\r\n\r\n      restart {\r\n        attempts = 10\r\n        interval = \"5m\"\r\n        delay    = \"15s\"\r\n        mode     = \"delay\"\r\n      }\r\n\r\n      service {\r\n        name     = \"prometheus\"\r\n        port     = \"web\"\r\n        tags     = [\"metrics\", \"scraper\"]\r\n        provider = \"nomad\"\r\n\r\n        check {\r\n          name     = \"prometheus-health\"\r\n          type     = \"http\"\r\n          path     = \"/graph\"\r\n          interval = \"10s\"\r\n          timeout  = \"2s\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "json": null,
            "modify_index": "1334",
            "name": "prometheus",
            "namespace": "default",
            "policy_override": null,
            "purge_on_destroy": null,
            "region": "global",
            "task_groups": [
              {
                "count": 1,
                "meta": {},
                "name": "prometheus",
                "task": [
                  {
                    "driver": "docker",
                    "meta": {},
                    "name": "prometheus",
                    "volume_mounts": [
                      {
                        "destination": "/etc/prometheus",
                        "read_only": false,
                        "volume": "prometheus-config"
                      }
                    ]
                  }
                ],
                "volumes": [
                  {
                    "name": "prometheus-config",
                    "read_only": true,
                    "source": "prometheus-config",
                    "type": "host"
                  }
                ]
              }
            ],
            "timeouts": null,
            "type": "service",
            "vault_token": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "consul_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "vault_token"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "nomad_job.api_gateway",
            "nomad_job.eureka_server",
            "null_resource.api_gateway_ready",
            "null_resource.eureka_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "api_gateway_ready",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8895418752048980370",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "nomad_job.api_gateway",
            "nomad_job.eureka_server",
            "null_resource.eureka_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "auth_service_ready",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2319238664939016617",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "nomad_job.auth_service",
            "nomad_job.eureka_server",
            "nomad_job.nats_server",
            "nomad_job.postgres",
            "null_resource.eureka_ready",
            "null_resource.nats_ready",
            "null_resource.postgres_ready"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "eureka_ready",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6359373613200306520",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "nomad_job.eureka_server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "nats_ready",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4544535211243488081",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "nomad_job.nats_server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "postgres_ready",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6907702327627371600",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "nomad_job.postgres"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
