name: CI Build and Push Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install SBT
        uses: coursier/setup-action@v1
        with:
          apps: sbt

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Spring services (Maven)
        run: |
          set -e
          mvn -f backend/auth-service/pom.xml clean install -DskipTests

      - name: Build Spring services (SBT)
        run: |
          set -e
          cd backend/eureka-server-app
          sbt clean compile universal:packageBin
          cd ../..

      - name: Build Play services (SBT)
        run: |
          set -e
          cd backend/product-service && sbt dist && cd ../..
          cd backend/order-service && sbt dist && cd ../..
          cd backend/cart-service && sbt dist && cd ../..

      - name: Build Scalatra services (SBT)
        run: |
          set -e
          cd backend/api-gateway && sbt clean compile universal:packageBin && cd ../..
          cd backend/customer-service && sbt clean compile universal:packageBin && cd ../..

      - name: Build Angular frontend
        run: |
          cd angular-frontend
          npm install
          npx ng build --configuration production
          cd ..

      - name: Build and Push Docker Images
        run: |
          IMAGE_PREFIX=ghcr.io/${{ github.repository_owner }}

          docker build -t $IMAGE_PREFIX/ecommerce-scl/eureka-server:main ./backend/eureka-server-app
          docker build -t $IMAGE_PREFIX/ecommerce-scl/api-gateway:main ./backend/api-gateway
          docker build -t $IMAGE_PREFIX/ecommerce-scl/auth-service:main ./backend/auth-service
          docker build -t $IMAGE_PREFIX/ecommerce-scl/customer-service:main ./backend/customer-service
          docker build -t $IMAGE_PREFIX/ecommerce-scl/cart-service:main ./backend/cart-service
          docker build -t $IMAGE_PREFIX/ecommerce-scl/product-service:main ./backend/product-service
          docker build -t $IMAGE_PREFIX/ecommerce-scl/order-service:main ./backend/order-service
          docker build -t $IMAGE_PREFIX/ecommerce-scl/angular-ecommerce:main -f angular-frontend/Dockerfile.nginx ./angular-frontend

          docker push $IMAGE_PREFIX/ecommerce-scl/eureka-server:main
          docker push $IMAGE_PREFIX/ecommerce-scl/api-gateway:main
          docker push $IMAGE_PREFIX/ecommerce-scl/auth-service:main
          docker push $IMAGE_PREFIX/ecommerce-scl/customer-service:main
          docker push $IMAGE_PREFIX/ecommerce-scl/cart-service:main
          docker push $IMAGE_PREFIX/ecommerce-scl/product-service:main
          docker push $IMAGE_PREFIX/ecommerce-scl/order-service:main
          docker push $IMAGE_PREFIX/ecommerce-scl/angular-ecommerce:main
